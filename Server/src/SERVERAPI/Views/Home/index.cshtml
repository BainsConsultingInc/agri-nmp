@model  SERVERAPI.ViewModels.IndexViewModel
@{
    ViewBag.Title = "Welcome";
    Layout = "_LayoutNoNav";
}
@inject IJsonHelper Json;

<!-- modal placeholder-->
<div id='myModal' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>


<!-- BODY CONTENT -->
<div id="topicTemplate" class="template container gov-container">
    <!-- PAGE CONTENT -->
    <form asp-controller="Home" method="post">
        <div class="row">
            <div id="main-content" class="contentPageMainColumn col-xs-12">
                <h3>Welcome to the Nutrient Management Program</h3>
                <br />
                @Html.Raw(Model.welcomeMsg)
                @*The Nutrient Management Program uses your production objectives, soil resources, and regional climate to provide farm specific recommendations for fertilizer and manure application rates.  Use the program for one time reference, or incorporate the results into a farm Nutrient Management Plan.*@
                <br />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <br />
                <br />
                <br />
                <br />
                <div class="Table" style="clear:both">
                    <div class="TableBody">
                        <div class="Row">
                            <div class="Cell col-sm-3">
                            </div>
                            <div class="Cell col-sm-2" style="text-align:center; vertical-align:bottom">
                                <p>Start a new Session</p>
                            </div>
                            <div class="Cell col-sm-2" style="text-align:center">
                                <p>or</p>
                            </div>
                            <div class="Cell col-sm-2" style="text-align:center; vertical-align:bottom">
                                <p>Load a previous .nmp file from your desktop</p>
                            </div>
                            <div class="Cell col-sm-3">
                            </div>
                        </div>
                        <div class="Row">
                            <div class="Cell col-sm-3">
                            </div>
                            <div class="Cell col-sm-2" style="text-align:center; vertical-align:bottom">
                                @if (Model.unsavedData)
                                {
                                        <button class="btn btn-info" data_modal2="" type="button" data-type="@Url.Action("NewWarning", "Home")">New</button>
                                }
                                else
                                {
                                        <input class="btn btn-info" type="submit" value="New" name="new" />
                                }
                            </div>
                            <div class="Cell col-sm-2" style="text-align:center">
                            </div>
                            <div class="Cell col-sm-2" style="text-align:center; vertical-align:bottom">
                                <button class="btn btn-info" data_modal="" type="button" data-type="@Url.Action("FileLoad", "Home")">Load</button>
                            </div>
                            <div class="Cell col-sm-3">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @Html.HiddenFor(x => x.unsavedData)
    </form>

    <!-- PAGE CONTENT -->
</div>
<!-- /BODY CONTENT -->

@section Scripts {

<script type="text/javascript">

        // ensure this event handler is attached to current and future elements (after partial renders)
    $(document).on("click", '[data_modal]', function (e) {
        $.ajaxSetup({ cache: false });
            $type = $(this).data('type'); // this works as of jQuery 1.4.3, otherwise $(this).attr('data-type');
            $('#myModalContent').load($type, function () {
                $('#myModal').modal({
                    /*backdrop: 'static',*/
                    //keyboard: true
                }, 'show');
                bindForm(this);
            });
            return false;
         });

        function bindForm(dialog) {
            $('form', dialog).submit(function () {
                if ($("#unsavedData").val() == "False") {
                    var fileUpload = $("#FileUpload1").get(0);
                    var files = fileUpload.files;

                    // Create FormData object
                    var fileData = new FormData();

                    // Looping over all files and add it to FormData object
                    for (var i = 0; i < files.length; i++) {
                        fileData.append(files[i].name, files[i]);
                    }
                    $.ajax({
                        url: this.action,
                        type: this.method,
                        contentType: false,
                        processData: false,
                        data: fileData,
                        success: function (result) {
                            if (result.success) {
                                $('#myModal').modal('hide');
                                window.location.href = result.url;
                            } else {
                                $('#myModalContent').html(result);
                                bindForm(dialog);
                            }
                        }
                    });
                }
                else
                {
                    $.ajax({
                        cache: false,
                        url: this.action,
                        type: this.method,
                        data: $(this).serialize()
                    })
                        .done(function (result) {
                            if (result.success) {
                                $('#myModal').modal('hide');
                                $(result.target).load(result.url); //  Load data from the server and place the returned HTML into the matched element
                            } else {
                                $('#myModalContent').html(result);
                                bindForm(dialog);
                            }
                        });
                }
                return false;
            });
        }

        $(document).on("click", '[data_modal2]', function (e) {
            $.ajaxSetup({ cache: false });
            $type = $(this).data('type'); // this works as of jQuery 1.4.3, otherwise $(this).attr('data-type');
            $('#myModalContent').load($type, function () {
                $('#myModal').modal({
                    /*backdrop: 'static',*/
                    //keyboard: true
                }, 'show');
                bindForm2(this);
            });
            return false;
        });

        function bindForm2(dialog) {
            $('form', dialog).submit(function () {
                $.ajax({
                    cache: false,
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize()
                })
                .done(function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        //$(result.target).load(result.url); //  Load data from the server and place the returned HTML into the matched element
                        window.location.href = result.url;
                    } else {
                        $('#myModalContent').html(result);
                        bindForm2(dialog);
                    }
                });

                return false;
            });

        }

        $(document).ready(function () {
            $.ajaxSetup({ cache: false });
        });

</script>

}
