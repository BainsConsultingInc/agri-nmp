@model SERVERAPI.ViewModels.SoilTestViewModel

@{
    ViewBag.Title = "Soil Tests";
}
<!-- modal placeholder-->
<div id='myModal' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

<!-- BODY CONTENT -->

<div class="header-height"></div>

<div class="step-header">
    <div class="container">
        <div class="col-sm-3">
            <span class="step-header-circle">3</span>
            <span class="step-header-name">Field Soil Tests</span>
        </div>
        <div class="col-sm-9">            
            <div class="col-sm-4 text-left ">
                <span class="step-header-steps">Step 3 of 6</span>
            </div>
            <div class="col-sm-6 text-right">
                <input class="btn btn-primary" type="button" value="Download file" title="Download data to your local drive" onclick="location.href='@Url.Action("Download", "Home")'" />
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="step-forms col-sm-12">
        <!-- PAGE CONTENT -->
        <form asp-controller="Soil" asp-action="SoilTest" method="post" id="modForm">
            <div class="form-box">
                <div class="form-box-body">
                    <div class="form-box-fields">
                        <div class="row">
                            <div class="col-sm-7">
                                <label asp-for="selTstOption">Testing Method</label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-horizontal">
                                <div class="form-group col-sm-7">
                                    <select class="form-control" asp-for="selTstOption" asp-items="@(new SelectList(Model.tstOptions,"Id","Value"))" id="ddlMth">
                                        <option>select</option>
                                    </select>
                                </div>
                                <div class="form-group col-sm-1" style="padding-left:0px">
                                    <a href="@Model.url" target="_blank"><span class="glyphicon glyphicon-info-sign" aria-hidden="true" title="Explanation of testing methods" style="font-size:20px; padding-top:5px"></span></a>
                                </div>
                            </div>
                            <div class="col-sm-7">
                                <span asp-validation-for="selTstOption"></span>
                            </div>
                        </div>
                    </div>
                    <div class="form-box-fields">
                        <div class="row">
                            <div class="col-sm-12">
                                @if (!Model.fldsFnd)
                                {
                                    <div class="form-box">
                                        <div class="form-box-header clearfix">
                                            <h3>To add soil tests please add a field first</h3>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    if (Model.testSelected)
                                    {
                                        <div id="test">
                                            @await Component.InvokeAsync("SoilTests")
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="form-box">
                                            <div class="form-box-header clearfix">
                                                <h3>A testing method must be selected before soil test results can be entered</h3>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                    <br />
                    <br />
                    <br />
                    <br />
                </div>
            </div>
            <div class="form-box-submit">
                <input class="form-box-submit-button btn btn-primary" style="float:left" type="button" value="Previous" onclick="Intercept('@Url.Action("Fields", "Fields" )');" />
                <input class="form-box-submit-button btn btn-primary" style="float:right" type="button" value="Next" onclick="Intercept('@Url.Action("Manure", "Manure" )');" />
            </div>
            @Html.HiddenFor(x => x.fldsFnd)
            @Html.HiddenFor(x => x.buttonPressed)
            @Html.HiddenFor(x => x.testSelected)
        </form>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">

        // ensure this event handler is attached to current and future elements (after partial renders)
        $(document).on("click", '[data_modal]', function (e) {
            $.ajaxSetup({ cache: false });
            $type = $(this).data('type'); // this works as of jQuery 1.4.3, otherwise $(this).attr('data-type');
            $("#divSize").addClass("modal-lg");
            $('#myModalContent').load($type, function () {
                $('#myModal').modal({
                    /*backdrop: 'static',*/
                    //keyboard: true
                }, 'show');
                bindForm(this);
            });
            return false;
        });

        $(document).ready(function () {
            $("body").on("change", "#ddlMth", function () {
                $('#buttonPressed').val("MethodChange");
                $("#modForm").submit();
            })
        });

        function bindForm(dialog) {
            $('form', dialog).submit(function () {
                $.ajax({
                    cache: false,
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize(),
                    success: function (result) {
                        if (result.success) {
                            $('#myModal').modal('hide');
                            window.location.href = '@Url.Action("SoilTest","Soil")';
                    } else {
                        $('#myModalContent').html(result);
                        bindForm(dialog);
                    }
                }
            });
            return false;
        });
    }

    $(document).ready(function () {

        $('#sampleDt').datepicker({
            format: "dd/mm/yyyy",
            autoclose: true
        });
    });

        function Intercept(x) {
        if ($("#testSelected").val() == "False" ||
            $("#missingTests").val() == "True")
        {
            $.ajaxSetup({ cache: false });
            var url = '@Url.Action("MissingTests", "Soil", new { target = "zzz" })';
            $type = url.replace('zzz',x);
            $("#divSize").addClass("modal-lg");
            $('#myModalContent').load($type, function () {
                $('#myModal').modal({
                    /*backdrop: 'static',*/
                    //keyboard: true
                }, 'show');
                bindForm(this);
            });
            return false;
        }
        else
        {
            window.location.href = x;
        }
    }

    </script>

}
