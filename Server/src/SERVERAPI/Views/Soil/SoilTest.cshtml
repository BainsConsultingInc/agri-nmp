@model SERVERAPI.ViewModels.SoilTestViewModel

@{
    ViewBag.Title = "Soil Tests";
}
<!-- modal placeholder-->
<div id='myModal' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

<!-- BODY CONTENT -->

<div class="header-height"></div>

<div class="step-header">
    <div class="container">
        <div class="col-sm-6">
            <span class="step-header-circle">2</span>
            <span class="step-header-name">Field Soil Tests</span>
        </div>
        <div class="col-sm-6">
            <div class="col-sm-3"></div>
            <div class="col-sm-3 text-right">
                <span class="step-header-steps">Step 3 of 6</span>
            </div>
            <div class="col-sm-6 step-header-form">
                <span>Units</span>
                <select class="form-control" id="select" disabled="disabled" title="Not Implemented" style="width:80px">
                    <option>lb/ac</option>
                </select>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="step-forms col-sm-12">
        <!-- PAGE CONTENT -->
        <form asp-controller="Soil" asp-action="SoilTest" method="post" id="modForm">
               <div class="form-group">
                    <div class="form-group col-sm-4">
                        <label asp-for="selMthOption">Testing Method</label>
                        <select class="form-control" asp-for="selMthOption" asp-items="@(new SelectList(Model.mthOptions,"Id","Value"))" id="ddlMth">
                            <option>select</option>
                        </select>
                        <span asp-validation-for="selMthOption" class="text-danger"></span>
                    </div>
                </div>
            <div class="step-forms col-sm-9">
                @if (!Model.fldsFnd)
                {
                    <div class="form-box">
                        <div class="form-box-header clearfix">
                            <h3>To add soil tests please add a field first</h3>
                        </div>
                    </div>
                }
                else
                {
                    <div id="test">
                        @await Component.InvokeAsync("SoilTests")
                    </div>
                }


            </div>

            <br />
            <br />
            <br />
            <br />
            <div class="form-box-submit">
                <input class="form-box-submit-button btn btn-primary btn-lg" style="float:left" type="button" value="Previous" onclick="window.location.href='@Url.Action("Manure", "Manure" )';" />
                <input class="form-box-submit-button btn btn-primary btn-lg" style="float:right" type="button" value="Next" onclick="window.location.href='@Url.Action("Report", "Report" )';" />
            </div>
            @Html.HiddenFor(x => x.fldsFnd)
            @Html.HiddenFor(x => x.buttonPressed)
        </form>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">

    // ensure this event handler is attached to current and future elements (after partial renders)
    $(document).on("click", '[data_modal]', function (e) {
        $.ajaxSetup({ cache: false });
        $type = $(this).data('type'); // this works as of jQuery 1.4.3, otherwise $(this).attr('data-type');
        $("#divSize").addClass("modal-lg");
        $('#myModalContent').load($type, function () {
            $('#myModal').modal({
                /*backdrop: 'static',*/
                //keyboard: true
            }, 'show');
            bindForm(this);
        });
        return false;
    });

    $(document).on("click", '[data_modal2]', function (e) {
        $.ajaxSetup({ cache: false });
        $type = $(this).data('type'); // this works as of jQuery 1.4.3, otherwise $(this).attr('data-type');
        $("#divSize").removeClass("modal-lg");
        $('#myModalContent').load($type, function () {
            $('#myModal').modal({
                /*backdrop: 'static',*/
                //keyboard: true
            }, 'show');
            bindForm2(this);
        });
        return false;
    });

    $(document).on("click", '[data_modal3]', function (e) {
        $.ajaxSetup({ cache: false });
        $type = $(this).data('type'); // this works as of jQuery 1.4.3, otherwise $(this).attr('data-type');
        $("#divSize").removeClass("modal-lg");
        $('#myModalContent').load($type, function () {
            $('#myModal').modal({
                /*backdrop: 'static',*/
                //keyboard: true
            }, 'show');
            bindForm2(this);
        });
        return false;
    });

    $(document).ready(function () {
        $("body").on("change", "#ddlMth", function () {
            $('#buttonPressed').val("MethodChange");
            $("#modForm").submit();
        })
    });

    function bindForm(dialog) {
        $('form', dialog).submit(function () {
            $.ajax({
                cache: false,
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        $(result.target).load(result.url); //  Load data from the server and place the returned HTML into the matched element
                    } else {
                        $('#myModalContent').html(result);
                        bindForm(dialog);
                    }
                }
            });
            return false;
        });
    }
    function bindForm2(dialog) {
        $('form', dialog).submit(function () {
            $.ajax({
                cache: false,
                url: this.action,
                type: this.method,
                data: $(this).serialize()
            })
                .done(function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        //$(result.target).load(result.url); //  Load data from the server and place the returned HTML into the matched element
                        window.location.href = '@Url.Action("Calculate","Nutrients")';
                    } else {
                        $('#myModalContent').html(result);
                        bindForm2(dialog);
                    }
                });

                return false;
            });
        }
        function bindForm3(dialog) {
            $('form', dialog).submit(function () {
                $.ajax({
                    cache: false,
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize()
                })
                .done(function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        $(result.target).load(result.url); //  Load data from the server and place the returned HTML into the matched element
                    } else {
                        $('#myModalContent').html(result);
                        bindForm(dialog);
                    }
                });

                return false;
            });
        }

        $(document).ready(function () {

            $('#sampleDt').datepicker({
                format: "dd/mm/yyyy",
                autoclose: true
            });
        });
    </script>

}
