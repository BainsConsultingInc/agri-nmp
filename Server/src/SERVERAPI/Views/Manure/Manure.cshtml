@using Microsoft.AspNetCore.Http;
@model SERVERAPI.ViewModels.FarmViewModel

@{
    ViewBag.Title = "Manure/Compost Analysis";
}
<!-- modal placeholder-->
<div id='myModal' class='modal'>
    <div class="modal-dialog" id="divSize">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

<!-- BODY CONTENT -->

<div class="header-height"></div>

<div class="step-header">
    <div class="container">
        <div class="col-sm-9">
        </div>
        <div class="col-sm-3" style="text-align:right">
            <p style="margin:0px">Need to leave?</p>
            <a href='@Url.Action("Download", "Home")' style="text-decoration: underline">
                Continue later
            </a>
        </div>
    </div>
</div>

<div class="container">
    <div class="step-forms col-sm-12">
        <!-- PAGE CONTENT -->
        <form asp-controller="Manure" asp-action="Manure" method="post">
            <div id="compostmanure">
                @await Component.InvokeAsync("Compost")
            </div>
            <div class="form-box-submit">
                <input class="form-box-submit-button btn btn-primary" style="float:left" type="button" value="Previous" onclick="window.location.href='@Url.Action("SoilTest", "Soil" )';" />
                <input class="form-box-submit-button btn btn-primary" style="float:right" type="button" value="Next" onclick="window.location.href='@Url.Action("Calculate", "Nutrients" )';" />
            </div>
        </form>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
    //
    // data_modal  -> uses large format modal popup
    // data_modal2 -> uses small format modal popup and refreshes the entire screen when done
    // data_modal3 -> uses small format modal popup
    //
    // ensure this event handler is attached to current and future elements (after partial renders)
    $(document).on("click", '[data_modal]', function (e) {
        $.ajaxSetup({ cache: false });
        $type = $(this).data('type'); // this works as of jQuery 1.4.3, otherwise $(this).attr('data-type');
        $("#divSize").addClass("modal-large");
        $('#myModalContent').load($type, function () {
            $('#myModal').modal({
                /*backdrop: 'static',*/
                //keyboard: true
            }, 'show');
            bindForm(this);
        });
        return false;
    });

        function bindForm(dialog) {
        $('form', dialog).submit(function () {
            $.ajax({
                cache: false,
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        $(result.target).load(result.url);
                    } else {
                        $('#myModalContent').html(result);
                        bindForm(dialog);
                    }
                }
            });
            return false;
        });
    }

    $(document).ready(function () {
        $("body").on("change", "#ddlMan", function () {
            $('#buttonPressed').val("ManureChange");
            $("#modForm").submit();
        })
    });

        $(document).ready(function () {
            $("body").on("change", "#lab", function () {
                $('#buttonPressed').val("TypeChange");
                $("#modForm").submit();
            })
        });

        $(document).ready(function () {
            $("body").on("change", "#book", function () {
                $('#buttonPressed').val("TypeChange");
                $("#modForm").submit();
            })
        });

        $(document).ready(function () {
            $("#wizard-manure").addClass('wizard-item-done');
        });


    </script>

}
