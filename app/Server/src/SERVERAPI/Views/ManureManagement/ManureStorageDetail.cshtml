@model ManureStorageDetailViewModel

@{
    Layout = null;
}
<div id="target">
    <form asp-action="ManureStorageDetail" asp-controller="ManureManagement" id="modForm" method="post" data-ajax="true" data-ajax-method="POST" data-ajax-mode="REPLACE-WITH" data-ajax-update="#target">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title" id="myModalLabel">Storage Details - @Model.Title</h4>
        </div>
        <div class="modal-body">
            <div class="row">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <div class="form-group col-sm-3">
                        <label asp-for="SelectedManureMaterialType">Liquid or Solid</label>
                        <select class="form-control" asp-for="SelectedManureMaterialType" 
                                asp-items="@(Html.GetEnumSelectList<StaticData.ManureMaterialType>())" id="ddlManureMaterialType"
                                disabled="@(Model.DisableMaterialTypeForEditMode ? "disabled" : null)">
                            <option>Select Manure Type</option>
                        </select>
                        <span asp-validation-for="SelectedManureMaterialType" class="text-danger">Select a Manure Material Type</span>
                    </div>
                    <div class="form-group col-sm-3 agri-listbox">
                        <label asp-for="SelectedMaterialsToInclude">Select materials to include</label>
                        <ul class="form-control  agri-listbox" id="SelectedMaterialsToInclude">
                            @if (Model.GeneratedManures != null)
                            {
                                for (var index = 0; index < Model.GeneratedManures.Count; index++)
                                {
                                    <li>
                                        <label asp-for="@Model.GeneratedManures[index]">
                                            @Html.HiddenFor(m => Model.GeneratedManures[index].Value)
                                            @Html.HiddenFor(m => Model.GeneratedManures[index].Text)
                                            <input type="checkbox" asp-for="@Model.GeneratedManures[index].Selected" onchange="SelectedMaterialsToIncludeChanged()"/> @Model.GeneratedManures[index].Text
                                        </label>
                                    </li>
                                }
                            }
                        </ul>
                        <span asp-validation-for="SelectedMaterialsToInclude" class="text-danger"></span>
                    </div>
                    <div class="form-group col-sm-3">
                        <label asp-for="SystemName">System Name</label>
                        <input class="form-control" asp-for="SystemName" type="text" placeholder="@Model.SystemNamePlaceholder" id="txtSystemName" />
                        <span asp-validation-for="SystemName" class="text-danger"></span>
                    </div>
                    @if (Model.ShowRunOffQuestions)
                    {
                        <div class="form-group col-sm-3">
                            <label>Does it get runoff from roofs or yards?</label>
                            <label style="padding-right: 20px">
                                <input asp-for="GetsRunoffFromRoofsOrYards" type="radio" value="true" onchange="GetsRunoffFromRoofsOrYardsChanged()"/> Yes
                            </label>
                            <label>
                                <input asp-for="GetsRunoffFromRoofsOrYards" type="radio" value="false" onchange="GetsRunoffFromRoofsOrYardsChanged()"/> No
                            </label>
                            <label asp-for="RunoffAreaSquareFeet">Include runoff (enter it in area for rooftops)</label>
                            <input class="form-control" asp-for="RunoffAreaSquareFeet" type="text" placeholder="@Model.RunoffAreaSquareFeetPlaceholder" 
                                   id="txtRooftopsRunOff"
                                   disabled="@(Model.EnableRunoffAreaField ? null : "disabled")"/>
                            <span asp-validation-for="RunoffAreaSquareFeet" class="text-danger"></span>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button class="btn" type="button" data-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-primary" id="ok_button" @(Model.ButtonText == "Save" ? Html.Raw(" style='background-color: #1abbed'") : Html.Raw(""))>Save</button>
        </div>
        @Html.HiddenFor(x => x.SystemId)
        @Html.HiddenFor(x => x.SelectedManureMaterialType)
        @Html.HiddenFor(x => x.ButtonPressed)
        @Html.HiddenFor(x => x.SystemNamePlaceholder)
        @Html.HiddenFor(x => x.RunoffAreaSquareFeetPlaceholder)
        @Html.HiddenFor(x => x.ButtonText)
        @Html.HiddenFor(x => x.Target)
    </form>
</div>